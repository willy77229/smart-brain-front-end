{"ast":null,"code":"var _jsxFileName = \"/Users/willyc/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Entries from './components/Entries/Entries';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '777c777436b64ec59c69efc297a4c726';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'willy77229';\n  const APP_ID = 'smart-brain';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => console.log(result.outputs[0].data.regions[0].region_info.bounding_box)).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true,\n        color: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Entries, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Entries","ParticlesBg","FaceRecognition","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","onInputChange","event","setState","input","target","value","onButtonSubmit","state","fetch","then","response","json","result","console","log","outputs","data","regions","region_info","bounding_box","catch","error","box","render","className","children","type","bg","color","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/willyc/Desktop/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Entries from './components/Entries/Entries';\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst returnClarifaiRequestOptions= (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '777c777436b64ec59c69efc297a4c726';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'willy77229';       \n  const APP_ID = 'smart-brain';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json()) \n    .then(result => console.log(result.outputs[0].data.regions[0].region_info.bounding_box))\n    .catch(error => console.log('error', error));\n  }\n\n  render() {\n    return (\n      \n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" bg={true} color=\"#ffffff\" />\n        <Navigation />\n        <Logo />\n        <Entries />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}