{"ast":null,"code":"var _jsxFileName = \"/Users/willyc/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Entries from './components/Entries/Entries';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '777c777436b64ec59c69efc297a4c726';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'willy77229';\n  const APP_ID = 'smart-brain';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedin: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedin: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedin: false,\n      user: {\n        email: '',\n        name: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedin,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true,\n        color: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedin: isSignedin,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Entries, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Entries","ParticlesBg","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","result","catch","error","onRouteChange","route","isSignedin","user","email","name","render","className","children","type","bg","color","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/willyc/Desktop/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Entries from './components/Entries/Entries';\nimport ParticlesBg from 'particles-bg'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst returnClarifaiRequestOptions= (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '777c777436b64ec59c69efc297a4c726';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'willy77229';       \n  const APP_ID = 'smart-brain';\n  // Change these to whatever model and image URL you want to use\n  // const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": IMAGE_URL\n                }\n            }\n        }\n    ]\n});\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route:'signin',\n      isSignedin: false,\n      user: {\n        email: '',\n        name: ''\n      }\n    }\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)   \n    };\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box:box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json()) \n    .then(result => this.displayFaceBox(this.calculateFaceLocation(result)))\n    .catch(error => console.log('error', error));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n     this.setState({isSignedin: false}) \n    } else if(route === 'home') {\n      this.setState({isSignedin: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedin, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" bg={true} color=\"#ffffff\" />\n        <Navigation isSignedin={isSignedin} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Entries />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box}\n              imageUrl={imageUrl}/>\n            </div>  \n          : (\n              route === 'signin'\n              ? <Signin onRouteChange={this.onRouteChange} />\n              : <Register onRouteChange={this.onRouteChange} /> \n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}